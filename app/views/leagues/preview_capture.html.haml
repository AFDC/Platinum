- content_for :title, @league.name
= render :partial => '/pageheader', :locals => {subtitle: 'Activate Registrations', breadcrumbs: {'Leagues' => leagues_path, @league.name => league_path(@league), 'Activate Registrations' => nil}}

.row
  .span5
    = render :partial => '/league_summary', :locals => {league: @league}
    - if permitted_to? :manage, @league
      %hr
      %h4 League Comps
      = render partial: 'comps', locals: {league: @league}

  .span7
    = render partial: 'navbar'

    %h4 Current Stats
    - stats = {}
    %table.table.table-striped
      %thead
        %th &nbsp;
        %th Male
        %th Female
        %th Total
      %tbody
        %tr
          %th Waitlisted
          %td= stats[:waitlisted_male] = @league.registrations.male.waitlisted.count
          %td= stats[:waitlisted_female] = @league.registrations.female.waitlisted.count
          %td= stats[:waitlisted_male] + stats[:waitlisted_female]
        %tr
          %th Registering (Not Paid)
          %td= stats[:registering_male] = @league.registrations.male.registering.count
          %td= stats[:registering_female] = @league.registrations.female.registering.count
          %td= stats[:registering_male] + stats[:registering_female]
        %tr
          %td
            %strong Active (Paid)
          %td= stats[:active_male]=@league.registrations.male.active.count
          %td= stats[:active_female]=@league.registrations.female.active.count
          %td= stats[:active_male]+stats[:active_female]
        %tr
          %td
            %strong Player Limit
          %td= (stats[:limit_male]=@league.male_limit.to_i)
          %td= (stats[:limit_female]=@league.female_limit.to_i)
          %td= stats[:limit_female] + stats[:limit_male]

        %tr.success
          %td
            %strong Spots Remaining
          %td= stats[:spots_male] = stats[:limit_male] - (stats[:active_male] + stats[:registering_male])
          %td= stats[:spots_female] = stats[:limit_female] - (stats[:active_female] + stats[:registering_female])
          %td= stats[:spots_female] + stats[:spots_male]
    %hr
    %h4 Activate Players
    = form_tag(accept_players_league_path(@league), method: :post) do
      .row
        .span4
          %p
            This page allows you to accept players up to the cap established for the league.
          %p
            On the right, you will see a list of all players who will be allowed to register if you click the button below.
          - if @rg
            %p
              You are activating players from a #{@league.core_options.type}. On the right, 
              you will find all waitlisted players from that group, up to the gender limits for the league.
          - else
            %p
              If there are more registered players than available spots, spots will be filled based on registration time.
            %p
              If you need to move players into the league using some other system, please talk to Pete about what your options are.
          %p
            %strong Please use this tool with care:
            Users will be emailed asking them to log in and pay!
        .span3
          %div{style: "min-height: 300px; border-left: 1px solid #808080; padding-left: 10px;"}
            - if @rg.present?
              .alert.alert-warning
                %p
                  %strong Warning: 
                  Capturing payments for a #{@league.core_options.type} does not follow first-come, first-served rules.

            - %w(male female).each do |gender|
              - limit = @league.gender_limit(gender)
              - spots = stats["spots_#{gender}".to_sym]
              %h5=gender.capitalize
              - if limit.nil?
                .well There is no limit set; in order to use this tool, a limit must be specified.
              - elsif spots <= 0
                .well No spots remaining.
              - else
                %ul
                  - if @registrant_list[gender.to_sym].count <= 0
                    .alert.alert-info No #{gender} registrations to capture.
                  - @registrant_list[gender.to_sym].each do |reg|
                    - break unless spots > 0
                    %li
                      =link_to reg.user.name, reg.user
                      =hidden_field_tag('reg_id[]', reg._id)
                    - spots -= 1

            %button.btn.btn-block.btn-primary Activate Players