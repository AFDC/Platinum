
- if @league.errors.any?
    - errors = @league.errors
    .alert.alert-error
        The league information could not be saved
- else
    - errors = Hash.new([])

= form_for @league, html: {class: 'form-horizontal'} do |f|
    .row
        .span6
            %h4 &nbsp;
            .control-group{ class: ('error' if errors[:name].any?)}
                %label.control-label{for: 'league_name'} League Name
                .controls
                    =f.text_field :name
                    - if errors[:name].any?
                        %span.help-inline=errors[:name].first

            = render partial: '/user_multiselect', locals: {form: f, fieldname: 'commissioner_ids', label: "Commissioners", users: @league.commissioners}

            .control-group{ class: ('error' if errors[:age_division].any?)}
                %label.control-label{for: 'league_age_division'} Age Division
                .controls
                    =f.select :age_division, %w(adult juniors), prompt: true
                    - if errors[:age_division].any?
                        %span.help-inline=errors[:age_division].first
            .control-group{ class: ('error' if errors[:season].any?)}
                %label.control-label{for: 'league_season'} Season
                .controls
                    =f.select :season, %w(fall winter spring summer), prompt: true
                    - if errors[:season].any?
                        %span.help-inline=errors[:season].first
            .control-group{ class: ('error' if errors[:sport].any?)}
                %label.control-label{for: 'league_sport'} Sport
                .controls
                    =f.select :sport, %w(ultimate goaltimate), prompt: true
                    - if errors[:sport].any?
                        %span.help-inline=errors[:sport].first
            .control-group{ class: ('error' if errors[:male_limit].any? || errors[:female_limit].any?)}
                %label.control-label Gender Limit
                .controls
                    M:
                    =f.text_field :male_limit, class: 'span1'
                    F:
                    =f.text_field :female_limit, class: 'span1'
                    - if errors[:male_limit].any?
                        %span.help-block=errors[:male_limit].first
                    - if errors[:female_limit].any?
                        %span.help-block=errors[:female_limit].first

            .control-group{ class: ('error' if errors[:registration_open].any? || errors[:registration_close].any?)}
                %label.control-label Registration Dates
                .controls
                    .input-append
                        =f.text_field :registration_open, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                        %span.add-on
                            %i.icon.icon-calendar
                    to
                    .input-append
                        =f.text_field :registration_close, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                        %span.add-on
                            %i.icon.icon-calendar
            .control-group{ class: ('error' if errors[:start_date].any? || errors[:end_date].any?)}
                %label.control-label Competition Dates
                .controls
                    .input-append
                        =f.text_field :start_date, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                        %span.add-on
                            %i.icon.icon-calendar
                    to
                    .input-append
                        =f.text_field :end_date, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                        %span.add-on
                            %i.icon.icon-calendar
            .control-group{ class: ('error' if errors[:price].any?)}
                %label.control-label Registration Price
                .controls
                    .input-prepend
                        %span.add-on $
                        =f.text_field :price, class: 'input-small'
                    - if errors[:price].any?
                        %span.help-inline=errors[:price].first

            .control-group{ class: ('error' if errors[:price_women].any?)}
                %label.control-label Women's Reg. Price
                .controls
                    .input-prepend
                        %span.add-on $
                        =f.text_field :price_women, class: 'input-small'
                    - if errors[:price_women].any?
                        %span.help-inline=errors[:price_women].first

            .control-group{ class: ('error' if errors[:description].any?)}
                %label.control-label Description
                .controls
                    =f.text_area :description, class: "span4", rows: 10
                    - if errors[:description].any?
                        %span.help-inline=errors[:description].first
        .span6
            %ul.nav.nav-tabs
                %li.active=link_to 'League Config', '#config', 'data-toggle' => "tab"
                %li=link_to 'Comped Players', '#comped', 'data-toggle' => "tab"
                -if @league.started?
                    %li=link_to 'Champions', '#champions', 'data-toggle' => "tab"
            .tab-content
                .tab-pane.active#config
                    %h4 League Options
                    .control-group
                        %label.control-label{for: 'self_rank_type'} Self-rank Type
                        .controls
                            = f.select :self_rank_type, %w{simple detailed none}.map{|r| ["#{r.capitalize}", r]}, default: "simple"

                    .control-group{ class: ('error' if errors[:max_grank_age].any?)}
                        %label.control-label{for: 'max_grank_age'} Max gRank Age
                        .controls
                            =f.select :max_grank_age, (1..24).map{|m| ["#{m} #{'month'.pluralize(m)}",m]}, include_blank: "gRank Not Required"
                            - if errors[:max_grank_age].any?
                                %span.help-inline=errors[:max_grank_age].first

                    .control-group
                        %label.control-label Tournaments
                        .controls
                            %label.checkbox
                                = f.check_box :eos_tourney
                                End of season
                        .controls
                            %label.checkbox
                                = f.check_box :mst_tourney
                                Midseason

                    .control-group
                        %label.control-label Grouping
                        .controls
                            %label.checkbox
                                = f.check_box :allow_pairs
                                Allow Pairs

                    .control-group.hide
                        %label.control-label Spirit
                        .controls
                            %label.checkbox
                                = f.check_box :track_spirit_scores
                                Enable Score Reporting
                            %label.checkbox
                                = f.check_box :display_spirit_scores
                                Display Spirit Scores

                    %h4 Donations at Registration
                    %p.muted
                        This determines whether or not donations are permitted with league registration.
                        In order to advertise a specific use for donations from this leauge (e.g. YCC fundraising),
                        place a descriptive identifier in the Earmark field (this is for internal/accounting use).
                        Then, describe what the donations will be used for in the large text area. This text will
                        be visible to users who click to see more information about where their donation goes. If
                        the pitch field is left blank, a default message will be added about the donation going to
                        the AFDC's general budget.

                    .control-group
                        .controls
                            %label.checkbox
                                = f.check_box :solicit_donations
                                Enable Donations
                        %label.control-label Earmark
                        .controls
                            =f.text_field :donation_earmark
                        %label.control-label Pitch
                        .controls
                            =f.text_area :donation_pitch, class: "span4", rows: 6

                    %h4 Gender-based Registration
                    %p.muted
                        These dates will be used <em>in addition</em> to the general registrationdates
                        on the left. Please leave these dates blank unless you intended to to have
                        different registration dates for men and women in a <strong>coed league</strong>. 
                        For a single-gender league, simply set the other gender's limit to 0 and use the
                        general Registration Dates on the left.
                    .control-group{ class: ('error' if errors[:female_registration_open].any? || errors[:female_registration_close].any?)}
                        %label.control-label Women's Registration
                        .controls
                            .input-append
                                =f.text_field :female_registration_open, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                                %span.add-on
                                    %i.icon.icon-calendar
                            to
                            .input-append
                                =f.text_field :female_registration_close, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                                %span.add-on
                                    %i.icon.icon-calendar
                            %button.btn.button-primary#clear_female_reg_dates{type: 'button'} Clear

                    .control-group{ class: ('error' if errors[:male_registration_open].any? || errors[:male_registration_close].any?)}
                        %label.control-label Men's Registration
                        .controls
                            .input-append
                                =f.text_field :male_registration_open, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                                %span.add-on
                                    %i.icon.icon-calendar
                            to
                            .input-append
                                =f.text_field :male_registration_close, {'data-date-format' => 'yyyy-mm-dd', 'class' => 'date-field input-small'}
                                %span.add-on
                                    %i.icon.icon-calendar
                            %button.btn.button-primary#clear_male_reg_dates{type: 'button'} Clear

                    %h4 Core/Pod Options
                    = f.fields_for :core_options do |co|
                        - core_options = @league.core_options
                        - co_errors = core_options.errors
                        .control-group{ class: ('error' if co_errors[:type].any?)}
                            %label.control-label Core Type
                            .controls
                                =co.select :type, %w(core pod), selected: core_options.type, include_blank: "None"
                                - if co_errors[:type].any?
                                    %span.help-inline=co_errors[:type].first

                        .control-group{ class: ('error' if co_errors[:rank_limit].any?)}
                            %label.control-label Rank Cap
                            .controls
                                =co.text_field :rank_limit, value: core_options.rank_limit
                                - if co_errors[:rank_limit].any?
                                    %span.help-inline=co_errors[:rank_limit].first

                        .control-group{ class: ('error' if co_errors[:male_limit].any? || co_errors[:female_limit].any?)}
                            %label.control-label Gender Limit
                            .controls
                                M:
                                =co.text_field :male_limit, value: core_options.male_limit, class: 'span1'
                                F:
                                =co.text_field :female_limit, value: core_options.female_limit, class: 'span1'

                                - if co_errors[:male_limit].any?
                                    %span.help-inline=co_errors[:male_limit].first
                                - if co_errors[:female_limit].any?
                                    %span.help-inline=co_errors[:female_limit].first

                        .control-group{ class: ('error' if co_errors[:male_rank_constant].any? || co_errors[:female_rank_constant].any?)}
                            %label.control-label Rank Modifier
                            .controls
                                M:
                                =co.text_field :male_rank_constant, value: core_options.male_rank_constant, class: 'span1'
                                F:
                                =co.text_field :female_rank_constant, value: core_options.female_rank_constant, class: 'span1'

                                - if co_errors[:male_rank_constant].any?
                                    %span.help-inline=co_errors[:male_rank_constant].first
                                - if co_errors[:female_rank_constant].any?
                                    %span.help-inline=co_errors[:female_rank_constant].first

                .tab-pane#comped
                    %h4 Comped Users and Groups
                    - if permitted_to? :assign_comps, @league
                        = render partial: '/user_multiselect', locals: {form: f, fieldname: 'comped_player_ids', label: "Comped Players", users: @league.comped_players}
                        .control-group
                            %label.control-label Comped Groups
                            .controls
                                - CompGroup.all.each do |g|
                                    %label.checkbox
                                        =check_box_tag "league[comped_group_ids][]", g._id, @league.comped_group_ids.include?(g._id)
                                        %strong=g.name
                                        &dash;
                                        =g.description
                    - else
                        = render partial: 'comps', locals: {league: @league}
                .tab-pane#champions
                    %h4 Champions Selection
                    - if @league.mst_tourney
                        %label.control-label{for: 'mst_champion'} MST Champion
                        .controls
                            = f.select :mst_champion_id, @league.teams.map{|t| ["#{t.name} (#{t.captains.map{|c| c.name}.join(', ')})", t._id]}, style: 'width: 100%', prompt: 'Select a team:'
                    - if @league.eos_tourney
                        %label.control-label{for: 'eos_champion'} EOS Champion
                        .controls
                            = f.select :eos_champion_id, @league.teams.map{|t| ["#{t.name} (#{t.captains.map{|c| c.name}.join(', ')})", t._id]}, style: 'width: 100%', prompt: 'Select a team:'

    .form-actions
        %button.btn.btn-large.btn-primary=@league.new_record? ? "Create League" : "Update League"


- content_for :page_scripts do
    =javascript_include_tag '/javascripts/bootstrap-date_picker.js'
    :javascript
        $(function(){
            $(".date-field").datepicker();

            $("#clear_female_reg_dates").click(function(){
                $("#league_female_registration_open").val('');
                $("#league_female_registration_close").val('');
            });
            $("#clear_male_reg_dates").click(function(){
                $("#league_male_registration_open").val('');
                $("#league_male_registration_close").val('');
            });
        });
