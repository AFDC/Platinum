<% content_for :title, @league.name %>
<%=render :partial => '/pageheader', :locals => {subtitle: 'Manage Players', breadcrumbs: {'Leagues' => leagues_path, @league.name => league_path(@league), 'Manage Players' => nil}} %>

<div class="row" style="height: 100%">
    <div class="span3">
        <div id="player-details-container" class="well well-small hide">
            <div style="text-align: right"><button class="close" id="hide-player-details">&times;</button></div>
            <div id="player-details"></div>
        </div>
        
        <h2>Teams</h2>
        <div id="team-data"></div>
    </div>
    <div class="span9" style="height: 100%">
        <div class="row">
            <div class="span3">
                <h2>Registrants</h2>
            </div>
            <div class="span6">
                <h2>
                <div style="text-align: right">
                    <button id="clear-filters" class="btn btn-xs btn-info">Clear Filters</button>
                    <button id="refresh-data" class="btn btn-xs btn-info">Refresh Data</button>
                </div>
                </h2>
            </div>
        </div>
        <div id="table-container" style="display: flex; height: 80%;">
            <div id="registrant-data" style="height: 100%; width: 100%;"></div>
        </div>
    </div>
</div>

<% content_for :page_scripts do %>
    <%=javascript_include_tag('//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js')%>
    <script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.4.4/dist/js/tabulator.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/luxon@3.3.0/build/global/luxon.min.js"></script>
    <script type="text/javascript">
        _.templateSettings = {
            interpolate: /\{\{\=(.+?)\}\}/g,
            evaluate: /\{\{(.+?)\}\}/g
        };

        $(function(){
            $("#hide-player-details").click(function(){
                $("#player-details-container").hide();
            });
        });
    </script>
    <script type="text/javascript">
        $(function(){
            var teamDataURL = "<%=team_list_league_path(@league, :json)%>";
            
            var reg_table = new Tabulator("#team-data", {
                ajaxURL:teamDataURL,
                layout:"fitColumns", //fit columns to width of table (optional)
                columns:[ //Define Table Columns
                    {title:"Team", field:"name"},
                    {title:"MM", field:"man_matching", width: 64},
                    {title:"WM", field:"woman_matching", width: 64},
                ]
            });
        });
    </script>
    <script type="text/javascript">
        $(function(){
            var ajaxURL = "<%=reg_list_league_path(@league, :json)%>";
            var CSRF_TOKEN = $('meta[name=csrf-token]').attr('content');

            var minMaxFilterEditor = function(cell, onRendered, success, cancel, editorParams){

                var end;

                var container = document.createElement("span");

                //create and style inputs
                var start = document.createElement("input");
                start.setAttribute("type", "number");
                start.setAttribute("placeholder", "Min");
                start.setAttribute("min", 0);
                start.setAttribute("max", 10);
                start.style.padding = "4px";
                start.style.width = "50%";
                start.style.boxSizing = "border-box";

                start.value = cell.getValue();

                function buildValues(){
                    success({
                        start:start.value,
                        end:end.value,
                    });
                }

                function keypress(e){
                    if(e.keyCode == 13){
                        buildValues();
                    }

                    if(e.keyCode == 27){
                        cancel();
                    }
                }

                end = start.cloneNode();
                end.setAttribute("placeholder", "Max");

                start.addEventListener("change", buildValues);
                start.addEventListener("blur", buildValues);
                start.addEventListener("keydown", keypress);

                end.addEventListener("change", buildValues);
                end.addEventListener("blur", buildValues);
                end.addEventListener("keydown", keypress);


                container.appendChild(start);
                container.appendChild(end);

                return container;
            }

            //custom max min filter function
            function minMaxFilterFunction(headerValue, rowValue, rowData, filterParams){
                //headerValue - the value of the header filter element
                //rowValue - the value of the column in this row
                //rowData - the data for the row being filtered
                //filterParams - params object passed to the headerFilterFuncParams property

                    if(rowValue){
                        if(headerValue.start != ""){
                            if(headerValue.end != ""){
                                return rowValue >= headerValue.start && rowValue <= headerValue.end;
                            }else{
                                return rowValue >= headerValue.start;
                            }
                        }else{
                            if(headerValue.end != ""){
                                return rowValue <= headerValue.end;
                            }
                        }
                    }

                return true; //must return a boolean, true if it passes the filter.
            }

            var reg_table = new Tabulator("#registrant-data", {
                // height:205, // set height of table (in CSS or here), this enables the Virtual DOM and improves render speed dramatically (can be any valid css height value)
                ajaxURL:ajaxURL,
                layout:"fitDataFill", //fit columns to width of table (optional)
                dataTree:true,
                dataTreeStartExpanded:false,   
                dataTreeFilter: true,             
                columns:[ //Define Table Columns
                    {title:"Name", field:"name_with_pronouns", headerFilter:true},
                    {title:"Status", field:"status", headerFilter:"list", headerFilterParams:{valuesLookup: "all", valuesLookupField:"status", clearable: true}, hozAlign:"left"},
                    {
                        title:"Expiration",
                        visible: false,
                        field:"expires_at", 
                        formatter: "datetimediff", 
                        formatterParams:{
                            inputFormat:"iso",
                            unit:["minutes", "seconds"],
                            humanize: true,
                            invalidPlaceholder:true
                        }
                    },
                    {title:"Team", field:"team", headerFilter:"list", headerFilterParams:{valuesLookup: "all", valuesLookupField:"team", clearable: true}, hozAlign:"left"},
                    {title:"Rank", field:"rank",
                        sorter:"number", 
                        headerFilter:minMaxFilterEditor, 
                        headerFilterFunc:minMaxFilterFunction, 
                        headerFilterLiveFilter:false
                    },
                    {title:"Availability", field:"gen_availability", headerFilter:"list", headerFilterParams:{valuesLookup: "all", valuesLookupField:"gen_availability", clearable: true}, hozAlign:"left"},
                    {
                        title:"Matchup", 
                        field:"matchup",
                        formatter: "lookup",
                        formatterParams: {
                            "man-matching": "<span class=\"man label\">MM</span>",
                            "woman-matching": "<span class=\"wom label\">WM</span>",
                            "Mixed": "<span class=\"label\">MX</span>"
                        },
                        headerFilter:"list", 
                        headerFilterParams:{valuesLookup: "all", valuesLookupField:"matchup", clearable: true}, 
                        hozAlign:"left"
                    }
                ],
            });

            function render_team_updater(team_id) {
                var team_updater = _.template($("#team-selection-template").html());
                var teamUpdaterDomTarget = $("#team-selection-container");

                if (teamUpdaterDomTarget) {
                    teamUpdaterDomTarget.html(team_updater());
                    if (team_id) {
                        $("#team-selector").val(team_id);
                    }
                }
            }

            function render_player_details(rowData) {
                var domTarget = $('#player-details');
                var registrant_profile = _.template($('#registrant-detail-template').html());

                domTarget.html(registrant_profile(rowData));
                render_team_updater(rowData["team_id"]);
                $("#player-details-container").show();

                var cancelButton = $("#cancel-registration-button");
                var cancelPath = "<%=cancel_registration_league_path(@league, :json)%>";
                var errorMessageElement = $("#registrant-error-message");
                var successMessageElement = $("#registrant-success-message");

                if (cancelButton) {
                    cancelButton.on('click', function(){
                        var xhr = $.ajax({
                            headers: {
                                'X-CSRF-Token': CSRF_TOKEN
                            },
                            url: cancelPath,
                            method: "POST",
                            data: {registration_id: rowData["id"]}
                        }).done(function(data) {
                            console.log(data);
                            successMessageElement.html(data["msg"])
                            successMessageElement.show();
                            errorMessageElement.hide();
                            reg_table.setData(ajaxURL);
                        }).fail(function(jqXHR,textStatus,errorThrown){
                            errorMessageElement.html(jqXHR.responseJSON["msg"]);
                            errorMessageElement.show();
                            successMessageElement.hide();
                        });
                    });
                }
            }

            // trigger an alert message when the row is clicked
            reg_table.on("rowClick", function(e, row){ 
                var rowData = row.getData();

                if (rowData.type == "individual") {
                    render_player_details(rowData);
                } else {
                    alert(rowData.type);
                }
            });

            $('#clear-filters').on('click', function() {
                reg_table.clearFilter(true);
            });

            $('#refresh-data').on('click', function(){
                reg_table.setData(ajaxURL);
            });
        });
    </script>

    <script id="registrant-detail-template" type="text/x-underscore">
        <h4>
            <a href="{{=profile_url}}" target="_blank">{{=name}}</a>
            <small>{{=email}}</small>
        </h4>
        <ul class="unstyled">
            <li><strong>Registration</strong>: {{=status}}</li>
            <li><strong>Team:</strong> {{=team}}</li>
            <li><strong>Rank:</strong> {{=rank}}</li>
            {{ if (grank.score) { }}
                <li><strong>gRank</strong>: {{=grank.score}}</li>
            {{ } }}
        </ul>
        <div class="alert alert-error hide" id="registrant-error-message"></div>
        <div class="alert alert-success hide" id="registrant-success-message"></div>
        <div id="team-selection-container_hide"></div>
        <%=link_to "Edit Registration", edit_registration_path('PLACEHOLDER').gsub('PLACEHOLDER', '{{=id}}').html_safe, class: 'btn btn-block btn-small btn-info'%>
        {{ if (status == "active") { }}
            <button class="btn btn-block btn-small btn-warning" id="cancel-registration-button">Cancel & Refund</button>
        {{ } }}
    </script>

    <script id="team-selection-template" type="text/x-underscore">
    <% if (@league.teams.count > 0) %>
        <select id="team-selector">
            <option value="">Select Team</option>
            <% @league.teams.each do |t| %>
            <option value="<%=t.id%>"><%=t.name%></option>
            <% end %>
        </select>
        <button class="btn btn-small btn-block" type="button">Update Team</button>
        <hr />
    <% end %>
    </script>

    <script id="registrant-detail-template-original" type="text/x-underscore">
        <img class="img-polaroid img-rounded" src="{{=profile_img_url}}" style="max-width: 160px; height: auto;">
        <h4><a href="{{=profile_url}}" target="_blank">{{=name}}</a></h4>
        <ul class="unstyled">
            <li><strong>Registration:</strong> {{=status}}</li>
            <li><strong>Rank:</strong> {{=rank}}</li>
            {{ if (grank.score) { }}
                <li class="details-grank"><strong>gRank</strong>: {{=grank.score}} <i class="icon-question-sign"></i></li>
            {{ } }}
            <li><strong>Role:</strong> {{=player_type}}</li>
            <li><strong>Stats:</strong> {{=height}}, {{=age}} years old</li>
            {{ if (pair_id) { }}
                <li><strong>Pair:</strong> <a href="#" class="show-player-details" data-user-id="{{=pair_id}}">{{= window.registrant_data[pair_id].name }}</a></li>
            {{ } }}
            {{ if (registration_group) { }}
                <li><strong style="text-transform: capitalize">{{=window.core_type}}:</strong> <a href="#" class="show-group-details" data-group-id="{{=registration_group}}">{{= registration_group.substr(0,8) }}</a></li>
            {{ } }}
            {{ if (timestamps['pending']) { }}
                <li><strong>Reg:</strong> {{=moment.unix(timestamps['pending']).format('MMM Do, h:mm a')}}</li>
            {{ } }}
        </ul>
        <%=link_to "Edit Registration", edit_registration_path('PLACEHOLDER').gsub('PLACEHOLDER', '{{=registration_id}}').html_safe, class: 'btn btn-block btn-small btn-info'%>
    </script>
<% end %>

<% content_for :page_styles do %>
    <link href="https://unpkg.com/tabulator-tables@5.4.4/dist/css/tabulator.min.css" rel="stylesheet">
    <style>
        input[type=search]::-webkit-search-cancel-button { -webkit-appearance: searchfield-cancel-button; }
    </style>
<% end %>