- content_for :title, @league.name
= render :partial => '/pageheader', locals: {subtitle: @league.core_options.type.capitalize.pluralize, breadcrumbs: {'Leagues' => leagues_path, @league.name => @league, @league.core_options.type.capitalize.pluralize => nil}}

.row
  .span6
    %dl.dl-horizontal{style: 'margin: 0;'}
      %dt Male Limit:
      %dd #{@league.core_options.male_limit || 'n/a'}
      %dt Female Limit:
      %dd #{@league.core_options.female_limit || 'n/a'}
      %dt Rank Limit:
      %dd #{@league.core_options.rank_limit || 'n/a'}
  .span6
    - if permitted_to? :manage, @league
      %div{style: 'text-align: right'}
        =link_to new_league_registration_group_path(@league), class: 'btn btn-small, btn-primary' do
          %i.icon-plus
          Create New #{@league.core_options.type.capitalize}

- active_male = @league.registrations.male.active.count
- active_female = @league.registrations.female.active.count
- if @league.male_limit
  - male_spots = @league.male_limit - active_male
- if @league.female_limit
  - female_spots = @league.female_limit - active_female

%table.table
  %thead
    %th Group
    %th Players
  %tbody
    - @league.registration_groups.each do |rg|
      %tr
        %td{width: '30%'}
          %div
            - if permitted_to? :edit, rg
              =link_to rg._id, edit_league_registration_group_path(@league, rg)
            - else
              =rg._id
          - if @league.core_options.male_limit && rg.members.where({gender: 'male'}).count > @league.core_options.male_limit
            .alert.alert-error Too many men
          - if @league.core_options.female_limit && rg.members.where({gender: 'female'}).count > @league.core_options.female_limit
            .alert.alert-error Too many women
          - member_count = rg.members.count
          - if member_count > 0
            %div
              - registrations = Hash.new(0)
              - ready = Hash.new(0)
              - can_register = 0
              - rg.members.each do |m|
                - can_register += 1 if @league.registration_open_for?(m)
                - if reg = @league.registration_for(m)
                  - registrations[:total] += 1
                  - registrations[reg.status.to_sym] += 1
                  - if reg.status == 'pending'
                    - ready[reg.gender.to_sym] += 1
              - if member_count > can_register
                = form_tag(league_registration_group_invite_players_path(@league,rg), method: :post) do
                  = submit_tag(value = "Invite players to register", options = {class: "btn btn-block btn-small btn-primary"})
              - elsif member_count != registrations[:total]
                .alert.alert-error No actions may be taken until all members are registered.
              - elsif registrations[:canceled] > 0
                .alert.alert-warning Core can not be processed until all members are registered.
              - elsif registrations[:pending] > 0
                - if (male_spots.present? && male_spots < ready[:male]) || (female_spots.present? && female_spots < ready[:female])
                  - if permitted_to? :manage, @league
                    .alert.alert-warning
                      %strong There aren't enough spots left to activate this core:
                      - if male_spots.present?
                        %p Man-matching Spots Remaining: #{male_spots}
                      - if female_spots.present?
                        %p Woman-matching Spots Remaining: #{female_spots}    
                - else
                  - if permitted_to? :preview_capture, @league
                    =link_to 'Accept registered players on this core', preview_capture_league_path(@league, registration_group_id: rg._id), class: 'btn btn-block btn-small btn-primary', style: 'margin-top: 30px'

              - elsif registrations[:active] == member_count
                - if permitted_to? :add_to_team, rg
                  = form_tag add_to_team_league_registration_group_path(@league,rg), method: 'PUT', style: 'margin-top: 30px' do
                    = select_tag :team_id, options_for_select(@league.teams.map{|t| ["#{t.name} (#{t.captains.map{|c| c.name}.join(', ')})", t._id]}), style: 'width: 100%', prompt: 'Select a team:'
                    %button.btn.btn-block.btn-small.btn-success Add this #{@league.core_options.type} to a team
              - else
                .alert.alert-error Unknown error. Please contact help@afdc.com
            

        %td
          %table.table.table-condensed.table-striped
            %thead
              %th Name
              %th Status
              %th Team
              %th Rank
              %th #{@league.core_options.type.capitalize} Rank
            %tbody
              - totals = Hash.new(0)
              - rg.members.each do |m|
                - reg = @league.registration_for(m)
                %tr{class: "#{"error" unless reg}"}
                  %td=link_to m.name, m
                  - if @league.registration_open_for?(m) == false
                    %td
                      %span.label.label-important n/a
                    %td{colspan: 3} Player not invited
                  - elsif reg.nil?
                    %td
                      %span.label.label-important n/a
                    %td{colspan: 3} Player not registered
                  - else
                    - label_type = 'important'
                    - label_type = 'success' if reg.status == 'active'
                    - label_type = 'info' if reg.status == 'registering'
                    - label_type = 'inverse' if reg.status == 'canceled'
                    %td
                      %span{class: "label label-#{label_type}"}=reg.status

                    - if t = @league.team_for(m)
                      %td=link_to t.name, t
                    - else
                      %td N/A

                    - totals[:league_rank] += reg.rank || 0
                    %td=reg.rank
                    
                    - totals[:group_rank] += reg.core_rank || 0
                    %td=reg.core_rank
              - if rg.members.count > 0
                %tr.info
                  %td{colspan: 3} Totals:
                  %td=totals[:league_rank]
                  %td=totals[:group_rank]
                - if @league.core_options.rank_limit && totals[:group_rank] > @league.core_options.rank_limit
                  %tr.error
                    %td{colspan: 5} #{@league.core_options.type.capitalize} rank is #{totals[:group_rank] - @league.core_options.rank_limit} points over the limit.
